Liquid is a template engine which was crafted for very specific requirements

* It has to have simple markup and beautiful results. Template engines which don't produce good looking results are no fun to use.
* It needs to be non-evaling and secure. Liquid templates are made so that users can edit them. You don't want to run code on your server which your users wrote.
* It has to be stateless. The compile and render steps have to be separate, so that the expensive parsing and compiling can be done once;  later on, you can just render it by passing in a hash with local variables and objects.
* It needs to be able to style emails as well as HTML.

h2. Stuff to read, watch, etc.

* [[Liquid for Programmers]] 
* [[Liquid for Designers]] 

* [[Getting Liquid to Work in Rails]]

* "Liquid":http://railscasts.com/episodes/118-liquid (screencast)

h2. Who uses Liquid? 

* "Shopify":http://www.shopify.com
* "Mephisto":http://mephistoblog.com/
* "Chameleon":http://chameleon.wikidot.com/
* "Cashboard":http://www.getcashboard.com
* "Edicy":http://www.edicy.com
* "Widgetfinger":http://widgetfinger.com
* "Zendesk":http://www.zendesk.com
* "SandwichBoard":http://www.sandwichboard.com/
* "YikeSite (CMS)":http://www.yikesite.com/
* "Simplicant (Applicant Tracking System)":http://www.simplicant.com/
* ...Add yours :)

h2. Why should I use Liquid?

* You want to allow your users to edit the appearance of your application, but don't want them to run insecure code on your server.
* You want to render templates directly from the database.
* You like Smarty-style template engines.
* You need a template engine which does HTML just as well as emails.
* You don't like the markup language of your current template engine.
